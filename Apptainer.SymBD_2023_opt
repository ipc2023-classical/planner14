# Stage 1: Compile the planner
Bootstrap: docker
From: ubuntu:kinetic
Stage: build

%files
    .

%post
    ## Install all dependencies.
    apt-get update
    apt-get -y install --no-install-recommends cmake make g++ pypy3 automake

    ## Clear build directory.
    rm -rf ./builds

    ## Build planner.
    pypy3 build.py

    strip --strip-all builds/release/bin/downward

# Stage 2: Run the planner
Bootstrap: docker
From: ubuntu:kinetic
Stage: run

%files from build
    fast-downward.py
    driver
    builds/release/bin/

%post
    apt-get update
    apt-get -y install --no-install-recommends pypy3
    apt-get clean
    rm -rf /var/lib/apt/lists/*

# The runscript is called whenever the container is used to solve an instance.
%runscript
    DOMAINFILE="$1"
    PROBLEMFILE="$2"
    PLANFILE="$3"

    pypy3 /fast-downward.py \
        --plan-file "$PLANFILE" \
        --overall-time-limit 30m \
        "$DOMAINFILE" \
        "$PROBLEMFILE" \
	--search "sbd()"


# Define meta data
%labels
Name        SymBD
Description Symbolic Bidirectonal Blind Search
Authors       Alvaro Torralba <alto@cs.aau.dk>
License     GPL 3
Tracks      optimal
SupportsDerivedPredicates                       no
SupportsUniversallyQuantifiedPreconditions      yes
SupportsExistentiallyQuantifiedPreconditions    partially, only quantification over static predicates
SupportsUniversallyQuantifiedEffects            yes
SupportsNegativePreconditions                   yes
SupportsEqualityPreconditions                   yes
SupportsInequalityPreconditions                 yes
SupportsConditionalEffects                      yes
SupportsImplyPreconditions                      yes
